 import streamlit as st
import pandas as pd
import os
from PIL import Image
import matplotlib.pyplot as plt
import seaborn as sns

# Configuraci칩n b치sica de la p치gina
st.set_page_config(
    page_title="An치lisis de Pel칤culas",
    page_icon="游꿟",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Cargar datos desde CSV
@st.cache_data

def load_data():
    try:
        actores_directores = pd.read_csv('data/actores_directores.csv')
        peliculas_premios = pd.read_csv('data/peliculas_premios.csv')
        recaudacion = pd.read_csv('data/recaudacion_peliculas.csv')
        top_vistas = pd.read_csv('data/top_10_mas_vistas.csv')
        top_puntuadas = pd.read_csv('data/top_10_mejor_puntuadas.csv')
        return actores_directores, peliculas_premios, recaudacion, top_vistas, top_puntuadas
    except Exception as e:
        st.error(f"Error cargando datos: {e}")
        return None, None, None, None, None

actores_directores, peliculas_premios, recaudacion, top_vistas, top_puntuadas = load_data()

# T칤tulo de la aplicaci칩n
st.title("An치lisis de Pel칤culas 游꿘")

# Sidebar para navegaci칩n
st.sidebar.title("Navegaci칩n")
opciones = ["Inicio", "Visualizaciones", "Recomendador", "Acerca de"]
seleccion = st.sidebar.radio("Ir a", opciones)

if seleccion == "Inicio":
    st.header("Bienvenido al an치lisis de pel칤culas")
    st.write("""
    Esta aplicaci칩n te permite explorar datos interesantes sobre pel칤culas, 
    actores, directores y m치s. Usa el men칰 de la izquierda para navegar.
    """)

    st.subheader("Algunas estad칤sticas")
    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric("Pel칤culas en top vistas", "10")
    with col2:
        st.metric("Pel칤culas mejor puntuadas", "10")
    with col3:
        st.metric("Pa칤ses con datos", "50+")

elif seleccion == "Visualizaciones":
    st.header("Visualizaciones de datos")
    st.subheader("Top 10 pel칤culas m치s vistas")
    try:
        fig, ax = plt.subplots()
        sns.barplot(x='vistas', y='pelicula', data=top_vistas, ax=ax)
        st.pyplot(fig)
    except Exception as e:
        st.error(f"No se pudo cargar la visualizaci칩n: {e}")

elif seleccion == "Recomendador":
    st.header("Sistema de recomendaci칩n de pel칤culas")
    st.write("""
    Encuentra pel칤culas seg칰n tus preferencias: actor, g칠nero, director o pa칤s.
    """)

    filtro_actor = st.selectbox("Selecciona un actor", sorted(actores_directores['actor'].dropna().unique()))
    filtro_genero = st.selectbox("Selecciona un g칠nero", sorted(actores_directores['genero'].dropna().unique()))
    filtro_director = st.selectbox("Selecciona un director", sorted(actores_directores['director'].dropna().unique()))
    filtro_pais = st.selectbox("Selecciona un pa칤s de origen", sorted(actores_directores['pais'].dropna().unique()))

    if st.button("Recomendar pel칤culas"):
        recomendaciones = actores_directores[
            (actores_directores['actor'] == filtro_actor) &
            (actores_directores['genero'] == filtro_genero) &
            (actores_directores['director'] == filtro_director) &
            (actores_directores['pais'] == filtro_pais)
        ]

        if not recomendaciones.empty:
            st.success("Pel칤culas recomendadas:")
            for i, row in recomendaciones.head(3).iterrows():
                st.subheader(row['pelicula'])
                st.write(f"游꿟 Director: {row['director']}")
                st.write(f"游븸 Actor principal: {row['actor']}")
                st.write(f"游깴 Pa칤s: {row['pais']}")
                st.write(f"游꿠 G칠nero: {row['genero']}")
                st.write("---")
        else:
            st.warning("No se encontraron pel칤culas que coincidan con todos los filtros.")

elif seleccion == "Acerca de":
    st.header("Acerca de este proyecto")
    st.write("""
    Este proyecto fue creado para analizar datos de pel칤culas y proporcionar 
    recomendaciones basadas en preferencias de usuarios.

    **Tecnolog칤as utilizadas:**
    - Python
    - Streamlit
    - Pandas
    - Matplotlib/Seaborn
    """)
