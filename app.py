import streamlit as st
import pandas as pd
import os
from PIL import Image
import matplotlib.pyplot as plt
import seaborn as sns

# Configuraci√≥n b√°sica de la p√°gina
st.set_page_config(
    page_title="An√°lisis de Pel√≠culas",
    page_icon="üé¨",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Cargar datos desde CSV
@st.cache_data

def load_data():
    try:
        actores_directores = pd.read_csv('data/actores_directores.csv')
        peliculas_premios = pd.read_csv('data/peliculas_premios.csv')
        recaudacion = pd.read_csv('data/recaudacion_peliculas.csv')
        top_vistas = pd.read_csv('data/top_10_mas_vistas.csv')
        top_puntuadas = pd.read_csv('data/top_10_mejor_puntuadas.csv')
        return actores_directores, peliculas_premios, recaudacion, top_vistas, top_puntuadas
    except Exception as e:
        st.error(f"Error cargando datos: {e}")
        return None, None, None, None, None

actores_directores, peliculas_premios, recaudacion, top_vistas, top_puntuadas = load_data()

# T√≠tulo de la aplicaci√≥n
st.title("An√°lisis de Pel√≠culas üé•")

# Sidebar para navegaci√≥n
st.sidebar.title("Navegaci√≥n")
opciones = ["Inicio", "Visualizaciones", "Recomendador", "Acerca de"]
seleccion = st.sidebar.radio("Ir a", opciones)

if seleccion == "Inicio":
    st.header("Bienvenido al an√°lisis de pel√≠culas")
    st.write("""
    Esta aplicaci√≥n te permite explorar datos interesantes sobre pel√≠culas, 
    actores, directores y m√°s. Usa el men√∫ de la izquierda para navegar.
    """)

    st.subheader("Algunas estad√≠sticas")
    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric("Pel√≠culas en top vistas", "10")
    with col2:
        st.metric("Pel√≠culas mejor puntuadas", "10")
    with col3:
        st.metric("Pa√≠ses con datos", "50+")

elif seleccion == "Visualizaciones":
    st.header("Visualizaciones de datos")
    st.subheader("Top 10 pel√≠culas m√°s vistas")
    try:
        fig, ax = plt.subplots()
        sns.barplot(x='vistas', y='pelicula', data=top_vistas, ax=ax)
        st.pyplot(fig)
    except Exception as e:
        st.error(f"No se pudo cargar la visualizaci√≥n: {e}")

elif seleccion == "Recomendador":
    st.header("Quizz de recomendaci√≥n de pel√≠culas üéØ")
    st.write("Responde las siguientes 6 preguntas y obtendr√°s 5 recomendaciones seg√∫n tu perfil cin√©filo.")

    col1, col2 = st.columns(2)
    with col1:
        actor_sel = st.selectbox("1. ¬øActor que prefieres?", sorted(actores_directores['actor'].dropna().unique()))
        genero_sel = st.selectbox("2. ¬øG√©nero favorito?", sorted(actores_directores['genero'].dropna().unique()))
        duracion_max = st.slider("3. ¬øDuraci√≥n m√°xima que prefieres? (minutos)", 60, 240, 120)
    with col2:
        director_sel = st.selectbox("4. ¬øDirector favorito?", sorted(actores_directores['director'].dropna().unique()))
        pais_sel = st.selectbox("5. ¬øPa√≠s de origen de la pel√≠cula?", sorted(actores_directores['pais'].dropna().unique()))
        anio_max = st.slider("6. ¬øA√±o m√°ximo de estreno?", 1950, 2025, 2020)

    if st.button("üé¨ Mostrar mis 5 pel√≠culas ideales"):
        resultados = actores_directores[
            (actores_directores['actor'] == actor_sel) &
            (actores_directores['genero'] == genero_sel) &
            (actores_directores['director'] == director_sel) &
            (actores_directores['pais'] == pais_sel) &
            (actores_directores['duracion'] <= duracion_max) &
            (actores_directores['anio'] <= anio_max)
        ]

        if not resultados.empty:
            st.success("üéâ Aqu√≠ tienes tus recomendaciones:")
            for i, row in resultados.head(5).iterrows():
                st.subheader(row['pelicula'])
                st.write(f"üé¨ Director: {row['director']}")
                st.write(f"üßë Actor principal: {row['actor']}")
                st.write(f"üåç Pa√≠s: {row['pais']}")
                st.write(f"üé≠ G√©nero: {row['genero']}")
                st.write(f"üïê Duraci√≥n: {row['duracion']} minutos")
                st.write(f"üìÖ A√±o: {row['anio']}")
                st.write("---")
        else:
            st.warning("üòï No se encontraron coincidencias exactas. Prueba con otras combinaciones.")

elif seleccion == "Acerca de":
    st.header("Acerca de este proyecto")
    st.write("""
    Este proyecto fue creado para analizar datos de pel√≠culas y proporcionar 
    recomendaciones personalizadas seg√∫n decisiones del usuario.

    **Tecnolog√≠as utilizadas:**
    - Python
    - Streamlit
    - Pandas
    - Matplotlib/Seaborn
    """)
